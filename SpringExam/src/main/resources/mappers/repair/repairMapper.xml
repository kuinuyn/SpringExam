<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.mapper.slight.repair.repairMapper">
	
	<select id="getSystemRepairCnt" resultType="int" parameterType="hashMap">
		<![CDATA[
			SELECT COUNT(*)
			FROM GY_LIGHT_REPAIR A
			WHERE
				REPAIR_DATE BETWEEN #{sDate} AND #{eDate}
		]]>
			<if test="light_gubun != null and light_gubun != '' ">
				AND A.LIGHT_GUBUN = #{light_gubun}	
			</if>
			<if test="repair_cd != null and repair_cd != '' ">
				AND A.REPAIR_CD = #{repair_cd}	
			</if>
	</select>
	
	<select id="getSystemRepairList" resultType="hashMap" parameterType="hashMap">
		<![CDATA[
			SELECT * FROM 
			(SELECT T1.*, B.COMPANY_ID
			FROM (
				SELECT A.REPAIR_NO
							   , F_GY_DATA_CODE_NM('14', A.REPAIR_CD)||'/'||F_GY_DATA_CODE_NM('13', A.LIGHT_GUBUN) AS LIGHT_GUBUN
							   , A.LIGHT_NO
							   , A.NOTICE_NAME
							   , CASE WHEN A.inform_method = '03'
							   				THEN PHONE
							   				WHEN A.inform_method = '01'
							   				THEN MOBILE
							   				WHEN A.inform_method = '02'
							   				THEN EMAIL
							   				WHEN A.inform_method = '04'
							   				THEN ''
							   	END AS CONTACT
							   , COALESCE(TO_CHAR(A.NOTICE_DATE, 'YYYY.MM.DD'), '') AS NOTICE_DATE
							   , COALESCE(TO_CHAR(TO_DATE(A.REPAIR_DATE, 'YYYY.MM.DD'), 'YYYY.MM.DD'), '') AS REPAIR_DATE
							   , COALESCE(TO_CHAR(TO_DATE(B.REPAIR_DATE, 'YYYYMMDD'), 'YYYY.MM.DD'), '') AS REPAIR_DATE_2
							   , F_GY_DATA_CODE_NM('01', TROUBLE_CD) AS TROUBLE_NM
							   , F_GY_DATA_CODE_NM('03', PROGRESS_STATUS) AS PROGRESS_NAME							   
							   , PROGRESS_STATUS
					FROM GY_LIGHT_REPAIR A
								LEFT OUTER JOIN GY_LIGHT_REPAIR_PART B
								ON A.REPAIR_NO = B.REPAIR_NO
				WHERE
					1=1
			]]>
					<if test="sDate != null and sDate != '' and eDate != null and eDate != '' ">
						AND TO_CHAR(A.NOTICE_DATE, 'YYYY-MM-DD') BETWEEN #{sDate} AND #{eDate}
					</if>
					<if test="light_gubun != null and light_gubun != '' ">
						AND A.LIGHT_GUBUN = #{light_gubun}	
					</if>
					<if test="repair_cd != null and repair_cd != '' ">
						AND A.REPAIR_CD = #{repair_cd}	
					</if>
					<if test="searchType != null and searchType != '' ">
						<choose>
							<when test="searchType == 1">
								AND NOTICE_NAME LIKE '%'||#{keyword}||'%'
							</when>
							<when test="searchType == 2">
								AND LOCATION LIKE '%'||#{keyword}||'%'
							</when>
							<when test="searchType == 3">
								AND NEW_ADDRESS LIKE '%'||#{keyword}||'%'
							</when>
							<when test="searchType == 4">
								AND LIGHT_NO LIKE '%'||#{keyword}||'%'
							</when>
						</choose>
					</if>
			<![CDATA[
				ORDER BY A.REPAIR_NO DESC
			) T1
			LEFT OUTER JOIN GY_LIGHT_REPAIR_PART AS B  ON T1.REPAIR_NO = B.REPAIR_NO ) A
			]]>			
					<if test="searchType != null and searchType != '' ">
						<choose>
							<when test="searchType == 5">
								WHERE COMPANY_ID LIKE '%'||#{searchCom}||'%'
							</when>						
						</choose>
					</if>	
			LIMIT #{limit} OFFSET #{offset}
	</select>
	
	<select id="getSystemRepairDetail" resultType="hashMap" parameterType="hashMap">
		<![CDATA[
			SELECT A.REPAIR_NO
						   , F_GY_DATA_CODE_NM('14', A.REPAIR_CD) AS LIGHT_GUBUN
						   , A.LIGHT_NO
						   , A.NOTICE_NAME
						   , B.REPAIR_DESC
						   , A.LIGHT_NO
						   , A.LOCATION
						   , B.COMPANY_ID AS COMPANY_ID
						   , COALESCE(A.REPAIR_GUBUN, '') AS REPAIR_GUBUN
						   , TO_CHAR(A.NOTICE_DATE, 'YYYY.MM.DD') AS NOTICE_DATE
						   , A.REPAIR_BIGO
						   , B.PHOTO1
						   , B.PHOTO2
						   , B.PHOTO3
						   , B.ETC_PHOTO1
						   , B.ETC_PHOTO2
						   , A.INFORM_METHOD
						   , A.TROUBLE_DETAIL
						   , F_GY_DATA_CODE_NM('02',A.INFORM_METHOD ) AS INFORM_NM
						   , CASE WHEN inform_method = '03'
						   				THEN PHONE
						   				WHEN inform_method = '01'
						   				THEN MOBILE
						   				WHEN inform_method = '02'
						   				THEN EMAIL
						   				WHEN inform_method = '04'
						   				THEN ''
						   	END AS CONTACT
						   , TO_CHAR(A.MODIFY_DATE, 'YYYY.MM.DD') AS MODIFY_DATE
						   , COALESCE(TO_CHAR(TO_DATE(A.REPAIR_DATE, 'YYYY-MM-DD'), 'YYYY.MM.DD'),'') AS REPAIR_DATE
						   , COALESCE(TO_CHAR(TO_DATE(B.REPAIR_DATE, 'YYYYMMDD'), 'YYYY.MM.DD'),'') AS REPAIR_DATE_2
						   , F_GY_DATA_CODE_NM('01', TROUBLE_CD) AS TROUBLE_NM
						   , A.PROGRESS_STATUS
						   , F_GY_DATA_CODE_NM('03',A.PROGRESS_STATUS ) AS PROGRESS_STATUS_NM
						   , A.REMARK_ETC
						   , A.DONG
						   , (SELECT COM_NAME FROM GY_MEMBER WHERE MEMBER_ID = B.COMPANY_ID) AS COM_NAME  
						   , F_GY_DATA_CODE_NM('10', (select lamp2_cd from gy_light where light_no = a.light_no)) as lamp2_cd_nm 
						   , F_GY_DATA_CODE_NM('11', (select lamp3_cd from gy_light where light_no = a.light_no)) as lamp3_cd_nm   
						   , F_GY_DATA_CODE_NM('08', (select stand_cd from gy_light where light_no = a.light_no)) as stand_cd_nm  
						   , F_GY_DATA_CODE_NM('13', (select onoff_cd from gy_light where light_no = a.light_no)) as onoff_cd_nm 
						   , COALESCE((SELECT ETC FROM GY_LIGHT WHERE LIGHT_NO = A.LIGHT_NO),'') AS ETC 
						   , COALESCE((SELECT LAMP1_CD_ETC FROM GY_LIGHT WHERE LIGHT_NO = A.LIGHT_NO),'') AS LAMP1_CD_ETC
				FROM GY_LIGHT_REPAIR A 
				LEFT OUTER JOIN GY_LIGHT_REPAIR_PART B 
	          	ON A.REPAIR_NO = B.REPAIR_NO
				WHERE
					A.REPAIR_NO = #{repairNo}	
				ORDER BY A.REPAIR_NO
			]]>
	</select>
	
	<select id="getSystemRepairExcelList1" resultType="hashMap" parameterType="hashMap">
		<![CDATA[
			  SELECT A.*
			  FROM (SELECT A.REPAIR_NO AS "접수번호" ,
			               A.REPAIR_CD ,
			               F_GY_DATA_CODE_NM('14', A.REPAIR_CD)||'/'||F_GY_DATA_CODE_NM('13', A.LIGHT_GUBUN) AS "민원종류" ,
			               COALESCE(A.LIGHT_NO, '') AS "관리번호" ,
			               COALESCE(A.NOTICE_NAME, '') AS "신고인" ,
			               COALESCE(A.LOCATION, '') AS "지번주소",
			               COALESCE((SELECT NEW_ADDRESS
			                          FROM GY_LIGHT
			                         WHERE LIGHT_NO = A.LIGHT_NO), '') AS "도로명주소" ,               
			               CASE
			                 WHEN inform_method = '03' THEN PHONE
			                 WHEN inform_method = '01' THEN MOBILE
			                 WHEN inform_method = '02' THEN EMAIL
			                 WHEN inform_method = '04' THEN ''
			               END AS "전화번호" ,               
					       TO_CHAR(A.NOTICE_DATE, 'YYYY.MM.DD') AS "접수일" ,
			       		   TO_CHAR(A.REPAIR_DATE, 'YYYY.MM.DD') AS "지시일" ,
					       TO_CHAR(TO_DATE(B.REPAIR_DATE, 'YYYY-MM-DD'), 'YYYY.MM.DD') AS "보수일" ,
			               (SELECT DATA_CODE_NAME
			                  FROM GY_CODE
			                 WHERE CODE_TYPE ='01'
			                   AND DATA_CODE = A.TROUBLE_CD)||'/'||COALESCE(A.TROUBLE_DETAIL, '') AS "고장상태" , 
			               A.PROGRESS_STATUS, 
			               (SELECT DATA_CODE_NAME
			                  FROM GY_CODE
			                 WHERE CODE_TYPE = '03'
			                   AND PROGRESS_STATUS = DATA_CODE) AS "처리상황" ,
			               (SELECT COM_NAME
			                  FROM GY_MEMBER
			                 WHERE MEMBER_ID = B.COMPANY_ID) AS "시공업체" ,
			               B.REPAIR_DESC AS "수리내역"                 
	          FROM GY_LIGHT_REPAIR A LEFT OUTER JOIN GY_LIGHT_REPAIR_PART B 
	          ON A.REPAIR_NO = B.REPAIR_NO
	          WHERE A.PROGRESS_STATUS = '04'
			]]>
			<if test="repair_cd != null and repair_cd != '' ">
				AND A.REPAIR_CD = #{repair_cd}	
			</if>
			<![CDATA[	          
	            AND TO_CHAR(A.NOTICE_DATE, 'YYYY-MM-DD') BETWEEN #{sDate} AND #{eDate} 
	          ORDER BY A.REPAIR_NO) A 
			]]>	          		
	</select>

	<select id="getSystemRepairExcelList" resultType="hashMap" parameterType="hashMap">
		<![CDATA[
				SELECT A.REPAIR_NO AS "접수번호"
							   , F_GY_DATA_CODE_NM('14', A.REPAIR_CD) AS "민원종류"
							   , A.LIGHT_NO AS "관리번호"
							   , A.NOTICE_NAME AS "신고인"
							   , CASE WHEN A.inform_method = '03'
							   				THEN PHONE
							   				WHEN A.inform_method = '01'
							   				THEN MOBILE
							   				WHEN A.inform_method = '02'
							   				THEN EMAIL
							   				WHEN A.inform_method = '04'
							   				THEN ''
							   	END AS "전화번호"
							   , COALESCE(TO_CHAR(A.NOTICE_DATE, 'YYYY.MM.DD'), '') AS "접수일"
							   , COALESCE(TO_CHAR(TO_DATE(A.REPAIR_DATE, 'YYYY-MM-DD'), 'YYYY.MM.DD'), '') AS "지시일"
							   , COALESCE(TO_CHAR(TO_DATE(B.REPAIR_DATE, 'YYYY.MM.DD'), 'YYYY.MM.DD'), '') AS "보수일"
							   , F_GY_DATA_CODE_NM('01', A.TROUBLE_CD) AS TROUBLE_NM
							   , F_GY_DATA_CODE_NM('03', A.PROGRESS_STATUS) AS "처리상황"
					FROM GY_LIGHT_REPAIR A
								LEFT OUTER JOIN GY_LIGHT_REPAIR_PART B
								ON A.REPAIR_NO = B.REAPIR_NO
				WHERE
					TO_CHAR(NOTICE_DATE, 'YYYY-MM-DD') BETWEEN #{sDate} AND #{eDate}
			]]>
					<if test="repair_cd != null and repair_cd != '' ">
						AND A.REPAIR_CD = #{repair_cd}	
					</if>
			<![CDATA[
				ORDER BY A.REPAIR_NO
		]]>
	</select>
	
	<select id="getSystemRepairSearchCom" resultType="hashMap" parameterType="hashMap">
		<![CDATA[
			SELECT MEMBER_ID, PASSWORD, MEMBER_NAME, PHONE,
					  MOBILE, EMAIL, GRADE, AREA, COM_NAME, COM_CEO, 
					  COM_ADDR, COM_BID, BID_RATE, CHK_SMS, SMS_STIME, 
					  SMS_ETIME, YEAR 
			   FROM GY_MEMBER
			  WHERE GRADE = '03' 
			    AND LOGIN_YN = 'Y'
		]]>
	</select>
	
	<select id="getSystemRepairSaveFlag" resultType="hashMap" parameterType="hashMap">
		SELECT CASE 
							WHEN COMPANY_ID IS NULL 
							THEN 'I'
							ELSE 'U'
							END AS SAVEFLAG
		FROM GY_LIGHT_REPAIR_PART
		WHERE
			REPAIR_NO = #{repair_no}	
	</select>
	
	<select id="getSystemRepairSearchYear" resultType="hashMap" parameterType="hashMap">
		<![CDATA[
			SELECT A.YEAR
			 FROM GY_MEMBER A
			 GROUP BY A.YEAR
			 ORDER BY 
			 	A.YEAR DESC
		]]>
	</select>
	
	<select id="getMaterialList" parameterType="hashMap" resultType="hashMap">
		SELECT DATA_CODE_NAME||'-'||STANDARD AS DATA_CODE_NAME
						, DATA_CODE
		FROM GY_MATERIAL
		WHERE
			1=1
			AND YEAR = TO_CHAR(TO_DATE(#{noticeDate}, 'YYYY'), 'YYYY') 
			AND COMPANY_ID = #{company_id}
		ORDER BY SUNBUN ASC
	</select>
	
	<select id="getMaterialUsedList" parameterType="hashMap" resultType="hashMap">
		SELECT SEQ_NO
						, PART_CD
						, INOUT_CNT
		FROM GY_LIGHT_PART
		WHERE 1=1
			AND COMPANY_ID = #{company_id}
			AND REPAIR_NO = #{repairNo}
			AND INOUT_FLAG = '2'
		ORDER BY SEQ_NO ASC
	</select>
	
	<select id="getMaterialUsedMap" parameterType="hashMap" resultType="hashMap">
		<![CDATA[
			SELECT COUNT(*) AS CNT
						   , INOUT_DAY
						   , SEQ_NO
			FROM GY_LIGHT_PART
			WHERE
		]]>
				REPAIR_NO = #{repair_no}
				AND PART_CD = #{part_cd}
				AND INOUT_FLAG = '2'
		<![CDATA[
			GROUP BY SEQ_NO, INOUT_DAY
		]]>
	</select>
	
	<select id="getRepairStatus" resultType="hashMap" parameterType="hashMap">
		<![CDATA[
			SELECT PROGRESS_STATUS
				FROM GY_LIGHT_REPAIR A
				WHERE
					A.REPAIR_NO = #{repair_no}	
				ORDER BY A.LIGHT_NO
			]]>
	</select>
	
	<update id="updateRepair" parameterType="hashMap">
        UPDATE GY_LIGHT_REPAIR 
        SET
            PROGRESS_STATUS = '02'
        	, REMARK_ETC = #{remark_etc} 
        	, REPAIR_DATE = TO_CHAR(NOW(), 'YYYY-MM-DD')
        	, MODIFY_DATE = NOW()
        WHERE 
            REPAIR_NO = #{repair_no}			
	</update>	
	
	<update id="updateRepairPart" parameterType="hashMap">
		UPDATE GY_LIGHT_REPAIR_PART
		SET
			LAST_UPDATE = NOW()
			, COMPANY_ID = #{searchCom1}
			, PHOTO1 = ''
			, PHOTO2 = ''
			, PHOTO3 = ''
			, REPAIR_DATE = TO_CHAR(NOW(), 'YYYYMMDD')
		WHERE
			REPAIR_NO = #{repair_no}
	</update>

	<insert id="insertRepairPart" parameterType="hashMap">
		INSERT INTO GY_LIGHT_REPAIR_PART(
			REPAIR_NO, LIGHT_NO, COMPANY_ID, LAST_UPDATE
		) VALUES (
			#{repair_no}, #{lightNo}, #{searchCom1}, NOW()
		)		
	</insert>
	
	<update id="updateRepairCancel" parameterType="hashMap">
		UPDATE GY_LIGHT_REPAIR SET
	        PROGRESS_STATUS = '01'
	       	, REPAIR_DATE = NULL
	        , MODIFY_DATE = now()
		    , REMARK_ETC = ''
		  WHERE REPAIR_NO = #{repairNo}				
	</update>
	
	<delete id="deleteRepairCancel" parameterType="hashMap">
		DELETE FROM GY_LIGHT_REPAIR_PART
		WHERE
			REPAIR_NO = #{repairNo}
	</delete>
	
	<delete id="deleteRepairMaterialCancel" parameterType="hashMap">
		DELETE FROM GY_LIGHT_PART
		WHERE
			REPAIR_NO = #{repairNo}
			AND INOUT_FLAG = '2'
	</delete>
	
	<update id="updateRepairDetail" parameterType="hashMap">
		update gy_light_repair 
		set
			progress_status = #{progress_status}
			, repair_gubun = #{repair_gubun}
			, repair_bigo = #{repair_bigo}	
			, repair_date = to_char(now(), 'yyyy-mm-dd')
			, modify_date = now()
		WHERE
			repair_no = #{repair_no}
	</update>
	
	<update id="updateRepairDetailPart" parameterType="hashMap">
		update gy_light_repair_part 
		set
			repair_desc = #{repair_desc}
			, photo1 = #{photo1}
			, photo2 = #{photo2}
			, photo3 = #{photo3}
			, last_update = now()
			, repair_date = to_char(now(), 'yyyymmdd')
		WHERE
			repair_no = #{repair_no}
	</update>
	
	<update id="updateMaterialUsed" parameterType="hashMap">
		UPDATE GY_LIGHT_PART 
		SET
			INOUT_CNT = #{inout_cnt}
			, LAST_UPDATE = now()
		WHERE
			SEQ_NO = #{seq_no}
			AND INOUT_DAY = #{inout_day}
			AND PART_CD = #{part_cd}
			AND INOUT_FLAG = '2'
			AND REPAIR_NO = #{repair_no}
	</update>
	
	
	<insert id="insertMaterialUsed" parameterType="hashMap">
		<selectKey resultType="hashMap" keyProperty="seq_no,year" order="BEFORE">
				SELECT nextval('gy_light_part_seq'::regclass) as "seq_no"
								, year AS "year"
				FROM GY_MATERIAL
				WHERE 1=1
					   AND DATA_CODE = #{part_cd}
					   AND COMPANY_ID = #{company_id}
					   AND YEAR = TO_CHAR(TO_DATE(#{repair_date}, 'YYYYMMDD'), 'YYYY')
		</selectKey>
	
		INSERT INTO GY_LIGHT_PART 
		(SEQ_NO, INOUT_DAY, PART_CD, INOUT_FLAG, INOUT_CNT, LAST_UPDATE, REPAIR_NO, COMPANY_ID, YEAR, COMP_NM)
		VALUES
		(#{seq_no}, TO_CHAR(now(), 'YYYYMMDD'), #{part_cd}, '2', #{inout_cnt}, now(), #{repair_no}, #{company_id}, #{year}, #{company_id})
	</insert>
	
	<delete id="deleteMaterialUsed" parameterType="hashMap">
		DELETE FROM GY_LIGHT_PART
		WHERE
			SEQ_NO = #{seq_no}
			AND INOUT_DAY = #{inout_day}
			AND PART_CD = #{part_cd}
			AND INOUT_FLAG = '2'
	</delete>
</mapper>